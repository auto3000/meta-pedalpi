From 458e7c723a20f9ad0199e2628067d5331426adcd Mon Sep 17 00:00:00 2001
From: auto3000 <auto3000@users.noreply.github.com>
Date: Tue, 17 Oct 2017 20:17:05 +0200
Subject: [PATCH] logging: redirect printf to logger

---
 src/effects.c | 25 +++++++++++++------------
 src/socket.c  | 25 +++++++++++++------------
 2 files changed, 26 insertions(+), 24 deletions(-)

diff --git a/src/effects.c b/src/effects.c
index 997dee5..bd18c00 100644
--- a/src/effects.c
+++ b/src/effects.c
@@ -3671,7 +3671,7 @@ int effects_add(const char *uri, int instance)
     {
       if ( (jack_client = jack_client_open(effect_name, JackNoStartServer, &jack_status)) == NULL )
       {
-          logger(LOG_INFO, "%s: can't get jack client uid=%s retry=%d", effect_name, uid, i);
+          logger(LOG_INFO, "%s: can't get jack client uri=%s retry=%d", effect_name, uri, i);
           timespec_add(&t_now, DELAY_BETWEEN_RETRY_REGISTER_IN_NS);
           clock_nanosleep(CLOCK_MONOTONIC, TIMER_ABSTIME, &t_now, NULL);
       }
@@ -3683,7 +3683,7 @@ int effects_add(const char *uri, int instance)
 
     if (!jack_client)
     {
-        logger(LOG_ERR, "%s: can't get jack client uid=%s", effect_name, uid);
+        logger(LOG_ERR, "%s: can't get jack client uri=%s", effect_name, uri);
         error = ERR_JACK_CLIENT_CREATION;
         goto error;
     }
@@ -3709,7 +3709,7 @@ int effects_add(const char *uri, int instance)
         if (!plugin)
 #endif
         {
-            logger(LOG_ERR, "can't get plugin");
+            logger(LOG_ERR, "%s: can't get plugin uri=%s", effect_name, uri);
             error = ERR_LV2_INVALID_URI;
             goto error;
         }
@@ -3729,7 +3729,7 @@ int effects_add(const char *uri, int instance)
 
     if (!lilv_instance)
     {
-        logger(LOG_ERR, "can't get lilv instance");
+        logger(LOG_ERR, "%s: can't get lilv instance uri=%s", effect_name, uri);
         error = ERR_LV2_INSTANTIATION;
         goto error;
     }
@@ -3892,7 +3892,7 @@ int effects_add(const char *uri, int instance)
             audio_buffer = (float *) calloc(g_sample_rate, sizeof(float));
             if (!audio_buffer)
             {
-                logger(LOG_ERR, "can't get audio buffer");
+                logger(LOG_ERR, "%s: can't get audio buffer uri=%s", effect_name, uri);
                 error = ERR_MEMORY_ALLOCATION;
                 goto error;
             }
@@ -3903,9 +3903,10 @@ int effects_add(const char *uri, int instance)
 
             /* Jack port creation */
             jack_port = jack_port_register(jack_client, port_name, JACK_DEFAULT_AUDIO_TYPE, jack_flags, 0);
-            if (jack_port == NULL)
+
+            if (((long int) jack_port) <= 0)
             {
-                logger(LOG_ERR, "can't get jack port");
+                logger(LOG_ERR, "%s: can't get jack port name=%s uri=%s", effect_name, port_name, uri);
                 error = ERR_JACK_PORT_REGISTER;
                 goto error;
             }
@@ -3923,7 +3924,7 @@ int effects_add(const char *uri, int instance)
             control_buffer = (float *) malloc(sizeof(float));
             if (!control_buffer)
             {
-                logger(LOG_ERR, "can't get control buffer");
+                logger(LOG_ERR, "%s: can't get control buffer uri=%s", effect_name, uri);
                 error = ERR_MEMORY_ALLOCATION;
                 goto error;
             }
@@ -4041,7 +4042,7 @@ int effects_add(const char *uri, int instance)
             cv_buffer = (float *) calloc(g_sample_rate, sizeof(float));
             if (!cv_buffer)
             {
-                logger(LOG_ERR, "can't get cv buffer");
+                logger(LOG_ERR, "%s: can't get cv buffer uri=%s", effect_name, uri);
                 error = ERR_MEMORY_ALLOCATION;
                 goto error;
             }
@@ -4058,7 +4059,7 @@ int effects_add(const char *uri, int instance)
             jack_port = jack_port_register(jack_client, port_name, JACK_DEFAULT_AUDIO_TYPE, jack_flags, 0);
             if (jack_port == NULL)
             {
-                logger(LOG_ERR, "can't get jack port");
+                logger(LOG_ERR, "%s: can't get jack port name=%s with JackPortIsControlVoltage flag uri=%s", effect_name, port_name, uri);
                 error = ERR_JACK_PORT_REGISTER;
                 goto error;
             }
@@ -4161,7 +4162,7 @@ int effects_add(const char *uri, int instance)
             jack_port = jack_port_register(jack_client, port_name, JACK_DEFAULT_MIDI_TYPE, jack_flags, 0);
             if (jack_port == NULL)
             {
-                logger(LOG_ERR, "can't get jack port");
+                logger(LOG_ERR, "%s: can't get jack MIDI port name=%s uri=%s", effect_name, port_name, uri);
                 error = ERR_JACK_PORT_REGISTER;
                 goto error;
             }
@@ -4548,7 +4549,7 @@ int effects_add(const char *uri, int instance)
     /* Try activate the Jack client */
     if (jack_activate(jack_client) != 0)
     {
-        logger(LOG_ERR, "can't activate jack_client");
+        logger(LOG_ERR, "%s: can't activate jack_client uri=%s", effect_name, uri);
         error = ERR_JACK_CLIENT_ACTIVATION;
         goto error;
     }
diff --git a/src/socket.c b/src/socket.c
index f6b27cc..dd3ca0b 100644
--- a/src/socket.c
+++ b/src/socket.c
@@ -28,9 +28,10 @@
 #include <string.h>
 #include <sys/socket.h>
 #include <netinet/in.h>
+#include <errno.h>
 
 #include "socket.h"
-
+#include "logger.h"
 
 /*
 ************************************************************************************************************************
@@ -109,7 +110,7 @@ int socket_start(int socket_port, int feedback_port, int buffer_size)
 
     if (g_serverfd < 0)
     {
-        perror("socket error");
+        logger(LOG_ERR, "socket error %s", strerror(errno));
         return -1;
     }
 
@@ -119,7 +120,7 @@ int socket_start(int socket_port, int feedback_port, int buffer_size)
 
         if (g_fbserverfd < 0)
         {
-            perror("socket error");
+            logger(LOG_ERR, "socket error %s", strerror(errno));
             return -1;
         }
     }
@@ -154,7 +155,7 @@ int socket_start(int socket_port, int feedback_port, int buffer_size)
     serv_addr.sin_port = htons(socket_port);
     if (bind(g_serverfd, (struct sockaddr *) &serv_addr, sizeof(serv_addr)) < 0)
     {
-        perror("bind error");
+        logger(LOG_ERR, "bind error %s", strerror(errno));
         return -1;
     }
 
@@ -164,7 +165,7 @@ int socket_start(int socket_port, int feedback_port, int buffer_size)
         serv_addr.sin_port = htons(feedback_port);
         if (bind(g_fbserverfd, (struct sockaddr *) &serv_addr, sizeof(serv_addr)) < 0)
         {
-            perror("bind error");
+            logger(LOG_ERR, "bind error %s", strerror(errno));
             return -1;
         }
     }
@@ -172,13 +173,13 @@ int socket_start(int socket_port, int feedback_port, int buffer_size)
     /* Start listen the sockets */
     if (listen(g_serverfd, MOD_SOCKET_BACKLOG) < 0)
     {
-        perror("listen error");
+        logger(LOG_ERR, "listen error %s", strerror(errno));
         return -1;
     }
 
     if (feedback_port != 0 && listen(g_fbserverfd, MOD_SOCKET_BACKLOG) < 0)
     {
-        perror("listen error");
+        logger(LOG_ERR, "listen error %s", strerror(errno));
         return -1;
     }
 
@@ -229,7 +230,7 @@ int socket_send(int destination, const char *buffer, int size)
     ret = write(destination, buffer, size);
     if (ret < 0)
     {
-        perror("send error");
+        logger(LOG_ERR, "write error %s", strerror(errno));
     }
 
     return ret;
@@ -259,7 +260,7 @@ void socket_run(int exit_on_failure)
         if (! exit_on_failure)
             return;
 
-        perror("malloc error");
+        logger(LOG_ERR, "malloc error %s", strerror(errno));
         exit(EXIT_FAILURE);
     }
 
@@ -273,7 +274,7 @@ void socket_run(int exit_on_failure)
         if (! exit_on_failure)
             return;
 
-        perror("accept error");
+        logger(LOG_ERR, "accept error %s", strerror(errno));
         exit(EXIT_FAILURE);
     }
 
@@ -288,7 +289,7 @@ void socket_run(int exit_on_failure)
             if (! exit_on_failure)
                 return;
 
-            perror("accept error");
+            logger(LOG_ERR, "accept error %s", strerror(errno));
             exit(EXIT_FAILURE);
         }
     }
@@ -317,7 +318,7 @@ void socket_run(int exit_on_failure)
             if (! exit_on_failure)
                 break;
 
-            perror("read error");
+            logger(LOG_ERR, "read error %s", strerror(errno));
             exit(EXIT_FAILURE);
         }
         else /* Client disconnected */
