From 16d668b079283406ebf00210bd3c6d4c1878aff7 Mon Sep 17 00:00:00 2001
From: auto3000 <auto3000@users.noreply.github.com>
Date: Sun, 24 Jun 2018 17:43:22 +0200
Subject: [PATCH 16/16] logging: add some traces in utils and webserver

---
 mod/webserver.py  | 3 ++-
 modtools/utils.py | 6 ++++++
 2 files changed, 8 insertions(+), 1 deletion(-)

diff --git a/mod/webserver.py b/mod/webserver.py
index 18d61c0..c1ff632 100644
--- a/mod/webserver.py
+++ b/mod/webserver.py
@@ -1111,15 +1111,16 @@ class PedalboardLoadBundle(JsonRequestHandler):
     @gen.engine
     def post(self):
         bundlepath = os.path.abspath(self.get_argument("bundlepath"))
-
         try:
             isDefault = bool(int(self.get_argument("isDefault")))
         except:
             isDefault = False
+        logging.info("PedalboardLoadBundle: receive request bundlepath=%s isDefault=%s" % (self.get_argument("bundlepath"), isDefault))
 
         if os.path.exists(bundlepath):
             name = SESSION.load_pedalboard(bundlepath, isDefault)
         else:
+            logging.error("ERROR: PedalboardLoadBundle path does not exist bundle=%s isDefault=%s" % (bundlepath, isDefault))
             name = None
 
         self.write({
diff --git a/modtools/utils.py b/modtools/utils.py
index b1e3987..038dfd3 100644
--- a/modtools/utils.py
+++ b/modtools/utils.py
@@ -582,6 +582,7 @@ def get_all_plugins():
 def get_plugin_info(uri):
     info = utils.get_plugin_info(uri.encode("utf-8"))
     if not info:
+        logging.error("get_plugin_info %s returns NULL" % (uri.encode("utf-8")));
         raise Exception
     return structToDict(info.contents)
 
@@ -590,6 +591,7 @@ def get_plugin_info(uri):
 def get_plugin_gui(uri):
     info = utils.get_plugin_gui(uri.encode("utf-8"))
     if not info:
+        logging.error("get_plugin_gui %s returns NULL" % (uri.encode("utf-8")));
         raise Exception
     return structToDict(info.contents)
 
@@ -598,6 +600,7 @@ def get_plugin_gui(uri):
 def get_plugin_gui_mini(uri):
     info = utils.get_plugin_gui_mini(uri.encode("utf-8"))
     if not info:
+        logging.error("utils.get_plugin_gui_mini %s returns NULL" % (uri.encode("utf-8")));
         raise Exception
     return structToDict(info.contents)
 
@@ -605,6 +608,7 @@ def get_plugin_gui_mini(uri):
 def get_plugin_control_inputs_and_monitored_outputs(uri):
     info = utils.get_plugin_control_inputs_and_monitored_outputs(uri.encode("utf-8"))
     if not info:
+        logging.error("utils.get_plugin_control_inputs_and_monitored_outputs %s returns NULL" % (uri.encode("utf-8")));
         return {'inputs':[],'monitoredOutputs':[],'error':True}
     return structToDict(info.contents)
 
@@ -627,6 +631,7 @@ def get_broken_pedalboards():
 def get_pedalboard_info(bundle):
     info = utils.get_pedalboard_info(bundle.encode("utf-8"))
     if not info:
+        logging.error("utils.get_pedalboard_info %s returns NULL" % (bundle.encode("utf-8")));
         raise Exception
     return structToDict(info.contents)
 
@@ -636,6 +641,7 @@ def get_pedalboard_info(bundle):
 def get_pedalboard_size(bundle):
     size = utils.get_pedalboard_size(bundle.encode("utf-8"))
     if not size:
+        logging.error("utils.get_pedalboard_size %s returns NULL" % (bundle.encode("utf-8")));
         raise Exception
     width  = int(size[0])
     height = int(size[1])
-- 
2.7.4

